{{- with $env := env "ENVIRONMENT" -}}
{{- with $vaultSecretsPath := (or (env "VAULT_PATH_PREFIX") (printf "secret/dsde/firecloud/%s/import-service/" $env)) -}}
{{- with $mysqlData := secret (printf "%s/mysql/user" $vaultSecretsPath) -}}
{{- with $mysqlUsername := $mysqlData.Data.username -}}
{{- with $mysqlPassword := $mysqlData.Data.password -}}
{{- with $mysqlInstanceDetails := secret (printf "%s/mysql/instance_details" $vaultSecretsPath) -}}
{{- with $mysqlInstanceName := $mysqlInstanceDetails.Data.instance_name -}}
{{- with $pubSub := secret (printf "%s/pubsub" $vaultSecretsPath) -}}
{{- with $pubSubToken := $pubSub.Data.secret_token -}}


runtime: python39
service: default

# set scaling algorithm for this service. basic_scaling parameters are:
#
# max_instances: Required. The maximum number of instances for App Engine to create for this service version.
# This is useful to limit the costs of a service.
#
# idle_timeout: Optional. The instance will be shut down this amount of time after receiving its last request.
# The default is 5 minutes (5m).
#
basic_scaling:
  max_instances: 16
  idle_timeout: 15m

# see https://cloud.google.com/appengine/docs/standard/#instance_classes if we ever need to bump memory limits
#
# default instance_class for automatic_scaling is F1: 384MB / 600MHz
# default instance_class for basic_scaling is B2: 768MB / 1.2GHz
# other instance_class options:
#   B4: 1536MB / 2.4GHz
#   B4_1G: 3072MB / 2.4GHz
#   B8: 3072MB / 4.8GHz
#
instance_class: B4_1G

# in the ctmpl below, the token "vault" means secret/dsde/firecloud/<env>/import-service/
# vault/foo.bar means vault read secret/dsde/firecloud/<env>/import-service/foo and look for the "bar" key
# Note that you DON'T have to cover FiaB here, since on FiaB import-service is deployed using Docker and
# environment variables in its docker-compose.

env_variables:
 CLOUD_SQL_CONNECTION_NAME: "mysql+pymysql://{{$mysqlUsername}}:{{$mysqlPassword}}@/isvc?unix_socket=/cloudsql/terra-importservice-{{$env}}:us-central1:{{$mysqlInstanceName}}"

 RAWLS_URL: "https://rawls.dsde-{{$env}}.broadinstitute.org"
 SAM_URL: "https://sam.dsde-{{$env}}.broadinstitute.org"
 TDR_URL: {{if eq $env "prod"}}"https://data.terra.bio"
          {{else if eq $env "staging"}}"https://data.staging.envs-terra.bio"
          {{else if eq $env "alpha"}}"https://data.alpha.envs-terra.bio"
          {{else}}"https://jade.datarepo-dev.broadinstitute.org"{{end}}

 IMPORT_SVC_SA_EMAIL: "import-service@terra-importservice-{{$env}}.iam.gserviceaccount.com"
 BATCH_UPSERT_BUCKET: "import-service-batchupsert-{{$env}}"

 PUBSUB_PROJECT: "terra-importservice-{{$env}}"
 PUBSUB_TOPIC: "import-service-notify-{{$env}}"
 PUBSUB_SUBSCRIPTION: "import-service-notify-push"
 PUBSUB_TOKEN: {{$pubSubToken}}
 PUBSUB_ACCOUNT: "import-service@terra-importservice-{{$env}}.iam.gserviceaccount.com"

 # this needs to match the Terraform'd tfvars for the environment.
 # expect it to be importservice.firecloud.org for production and importservice.<env>.test.firecloud.org otherwise
 PUBSUB_AUDIENCE:   {{if eq $env "prod"}}"importservice.firecloud.org"{{else}}"importservice.{{$env}}.test.firecloud.org"{{end}}

 RAWLS_PUBSUB_PROJECT: "broad-dsde-{{$env}}"
 RAWLS_PUBSUB_TOPIC: "rawls-async-import-topic-{{$env}}"

 IMPORT_ALLOWED_NETLOCS: "{{if eq $env "prod"}}service.prod.anvil.gi.ucsc.edu{{else}}anvil.gi.ucsc.edu{{end}},*.singlecell.gi.ucsc.edu,*gen3.biodatacatalyst.nhlbi.nih.gov,*service.azul.data.humancellatlas.org"
 IMPORT_RESTRICTED_SOURCES: "{{if eq $env "prod"}}{{else}}prod.anvil.gi.ucsc.edu,s3://edu-ucsc-gi-platform-anvil-prod-storage-anvilprod.us-east-1,s3://edu-ucsc-gi-platform-hca-prod-storage-prod.us-east-1{{end}}"

{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}

